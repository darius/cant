;; 1-d cellular automata, 'elementary' in Wolfram's sense.
;; (That is, with 1-bit states and a neighborhood of three cells
;; including the middle one.)

(to (run rule start-bits n-steps)
  (to (step bits)
    (each rule
          `(0 0 ,@bits)
          `(0 ,@bits 0)
          `(,@bits 0 0)))
  (-> n-steps
      (for iterating [(state start-bits)]
        (show state)
        (step state))
      show))

(to (show bits)
  (out .displayln ((text-by "-*" bits) .center 79)))

;; There are 2**8 possible elementary CA's. Return the update rule
;; for the given-numbered one.
(to (rule<-index n)
  (on (left center right)
    (n .bit (+ (* left 4) (* center 2) right))))

(run (rule<-index 110) '(1) 30)
