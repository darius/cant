;; Non-abundant sums

(import (use 'factoring) list-divisors)

;; "It can be shown that all integers greater than 28123 can be
;; written as the sum of two abundant numbers."
(let limit 28123)

(to (answer)
  (sum (those not-sum-of-2-abundants? (1 .thru limit))))

(to (not-sum-of-2-abundants? n)
  (not (small-abundant-sums .maps? n)))

(to (abundant? n)
  (< n (sum-proper-divisors n)))

(to (sum-proper-divisors n)
  (- (sum (list-divisors n)) n))

(let small-abundants (those abundant? (1 .till limit)))

;; Faster version of (~.range (those (:: (<= it limit)) (each sum (grid* small-abundants small-abundants))))
(to (sums-set<-)
  (let sums (set<-))
  (let items small-abundants.items.list)
  (for each! (((~ i a) items))
    (begin summing ((jbs items))
      (let (~ j b) jbs.first)
      (let a+b (+ a b))
      (when (<= a+b limit)
        (sums .add! a+b)
        (when (< j i)
          (summing jbs.rest)))))
  sums)

(let small-abundant-sums (sums-set<-))

(out .print (answer)) ;; 4179871
