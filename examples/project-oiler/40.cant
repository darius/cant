;; Champernowne's constant

(to (answer)
  (to (champ index)
;;    (hey (v1-champ index)
    (hey (v2-champ index)
         (:: (out .say "~w: ~w\n" index it))))
  (* @(each (:: (champ (10 .** it))) (0 .thru 6))))

;; Super dumb but works.
(let champ-digits (gather/lazy ~.digits (iterate ~.+ 1)))
(to (v1-champ i) (champ-digits i.-))

;; Should be faster: champs are in a series of chunks:
;;    1 2 3 4 5 6 7 8 9    (length 1*9)
;;    10 11 ... 98 99      (length 2*90)
;;                         ...
;;    ...                  (length n*9*10^(n-1))
(to (v2-champ index)
  (surely (< 0 index))
  (begin skipping ((n 1) (i index))
    (let power (10 .** n.-))
    (let chunk-length (* n 9 power))
    (hm (when (<= i chunk-length)
          (let (~ q r) (i.- ./mod n))
          (let number (+ power q))
          (number.digits r))
        (else
          (skipping n.+ (- i chunk-length))))))

(out .print (answer)) ;; 210
