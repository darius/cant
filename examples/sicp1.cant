;; SICP exercise 2.29
;; (I renamed 'total-weight' to just 'weight'.)

;; Algebraic-data version
;; tree ::= number | {mobile branch branch}
;; branch ::= {branch length tree}
;; length ::= number

(to (balanced? tree)
  (may tree
    (be (? number?)
      #yes)
    (be {mobile left right}
      (and (branch-balanced? left)
           (branch-balanced? right)
           (= (torque left) (torque right))))))

(to (branch-balanced? {branch _ tree})
  (balanced? tree))

(to (torque {branch length tree})
  (* length (weight tree)))

(to (weight tree)
  (may tree
    (be (? number?)
      tree)
    (be {mobile left right}
      (+ (branch-weight left) (branch-weight right)))))

(to (branch-weight {branch _ thing})
  (weight thing))

(let test-mobile
  {mobile {branch 1 10}
          {branch 2 {mobile {branch 3 20}
                            {branch 4 30}}}})

(let test-balanced-mobile
  {mobile {branch 7 10}
          {branch 1 {mobile {branch 3 40}
                            {branch 4 30}}}})

(out .print (balanced? test-mobile))
(out .print (balanced? test-balanced-mobile))
