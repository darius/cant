;; (Use run.cant to run this.)

(let input (with-input-file ~.read-lines data-file))

(let parse
  (like "'#' :count ' @ ' :count ',' :count ': ' :count 'x' :count"))

(let claims (each parse input))


(out .display "Part 1\n")

(to (area<- `(,_ ,x0 ,y0 ,w ,h))
  (grid* (x0 .span w) (y0 .span h)))

(let covered-area (bag<- (gather area<- claims)))

(let n-conflicts (for tally-by [(n covered-area.values)]
                   (< 1 n)))
(out .print `(the area is ,n-conflicts))


(out .display "Part 2\n")

(to (undisputed? claim)
  (for every [(point (area<- claim))]
    (= 1 (covered-area point))))

(out .print `(the undisputed claims are ,(keep undisputed? claims)))
