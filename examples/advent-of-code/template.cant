(let input (with-input-file ~.read-lines data-file))
;(each! print (input .slice 0 5))

(let parse
  (simple-parser<- "(:integer | :skip)*"))

(let grammar (grammar<- "
main: '#' :count ' @ ' :count ',' :count ': ' :count 'x' :count :end.
"))
(let semantics (grammar (map<-)))
(let parse-main (semantics 'main))
(to (parse string)
  (~.results (parson-parse parse-main string)))

(let inputs (each parse input))
;(out .print inputs)


(out .display "\nPart 1\n")

(to (part-1)
  'xxx)

(out .say "~w\n" (part-1))


;(out .display "\nPart 2\n")

(to (part-2)
  'xxx)

;(out .say "~w\n" (part-2))
