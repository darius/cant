(import (use "../examples/huffman-coding") build-tree show-tree encoder<- encode decode)

(let eg1
  '((9 #\z)
    (10 #\j)
    (20 #\q)
    (20 #\x)
    (52 #\k)
    (93 #\v)
    (161 #\g)
    (162 #\b)
    (188 #\y)
    (203 #\w)
    (225 #\m)
    (228 #\f)
    (229 #\p)
    (310 #\u)
    (320 #\c)
    (365 #\d) 
    (403 #\l)
    (514 #\h)
    (603 #\r)
    (659 #\s)
    (718 #\i)
    (719 #\n)
    (794 #\o)
    (805 #\a)
    (959 #\t)
    (1231 #\e)))

(let t1 (build-tree (for each ((`(,freq ,rune) eg1))
                      (~ rune freq))))
(show-tree t1)

(let enc1 (encoder<- t1))
(let hello (encode enc1 "hello"))
(out .print hello)
(out .print (text<-list (decode t1 hello)))
