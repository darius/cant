(to (expect expected value)
  (unless (= expected value)
    (oops "Smoke test failed" expected value)))

(expect 42           42)
(expect 'hello       'hello)
; (out .print (make _))
(expect '()          ((make (xs xs))))
(expect '(1 2 3)     ((make (xs xs)) 1 2 3))
(expect 2            (if #no 1 2))
(expect 1            (if #yes 1 2))
(expect 'no          ((make ('(#no) 'no) (~ 'yes)) #no))
(expect 'yes         ((make ('(#no) 'no) (~ 'yes)) #yes))
(expect '(hello yes) `(hello ,(if #yes 'yes 'no)))
(expect 5            (2 .+ 3))
(expect 55           (do [] (let x 55)))
(expect 136          (do [] (to (f) 136) (f)))
(expect 120          (do []
                       (to (factorial n)
                         (may n
                           (0 1)
                           (~ (n .* (factorial (n .- 1))))))
                       (factorial 5)))
